CNN{
filter{name:001-010-100;filter:001010100;dimension:3}
filter{name:101-010-101;filter:101010101;dimension:3}
filter{name:100-010-001;filter:100010001;dimension:3}
convolutedMap{000211000031021300002100103201221000010011220013010201012202101100211001031011310}
convolutedMap{001322001132022400012200213212341101010013221125111201012303212200221101142213420}
convolutedMap{001221001111001200011100211111230101000012111123111000001101212100011100122212210}
pooledMap{3223222113121221}
pooledMap{3324234225322332}
pooledMap{1222123223211112}
outputs{0;1,03446729715656;5,85521668002718;0}
}
ANN{
epochs:1000
alpha:0,05
}layer{
neurons{
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:4;
bias:0;
outputValue:4;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:4;
bias:0;
outputValue:4;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:5;
bias:0;
outputValue:5;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:3;
bias:0;
outputValue:3;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:1;
bias:0;
outputValue:1;
errorGradient:0;
weights[none]
inputs[none]
],
neuron[
AF:ReLU;
isInput:True;
inputValue:2;
bias:0;
outputValue:2;
errorGradient:0;
weights[none]
inputs[none]
]
}
layer{
neurons{
neuron[
AF:ReLU;
isInput:False;
inputValue:0;
bias:-0,390217044106786;
outputValue:0;
errorGradient:0;
weights[
-0,988697757007879;
-0,0482426756286261;
-0,442181414664807;
0,730082434476392;
-0,379016508059118;
-0,165477388149815;
0,24300396779692;
-0,231087230719201;
0,0838285093586093;
-0,398984469193492;
-0,369171622846821;
-0,0703300587229105;
-0,787422137235954;
-0,989872555243723;
0,172790742094065;
-0,745307550646974;
-0,894387850488717;
-0,577246765409245;
0,558223617988743;
-0,128431525606863;
0,102924961178994;
-0,496412184786243;
0,518882638550775;
0,00689709792234794;
-0,937259361118665;
-0,706582862747173;
-0,818754888055266;
0,721556837540845;
0,782421157594035;
-0,665665633820773;
-0,818123438310867;
0,44445372346996;
-0,559231804478556;
0,56184551751327;
0,0251053725486181;
-0,00231351284417958;
-0,628676785914543;
-0,97287956530828;
0,131101126377984;
0,66360242556017;
-0,459993042731654;
0,905100249641156;
0,19838850069716;
-0,400619867909988;
-0,297211361721722;
-0,44770249791802;
0,833473453220666;
-0,398332474473087
]
inputs´8
3;
2;
2;
3;
2;
2;
2;
1;
1;
3;
1;
2;
1;
2;
2;
1;
3;
3;
2;
4;
2;
3;
4;
2;
2;
5;
3;
2;
2;
3;
3;
2;
1;
2;
2;
2;
1;
2;
3;
2;
2;
3;
2;
1;
1;
1;
1;
2
]
],
neuron[
AF:ReLU;
isInput:False;
inputValue:0;
bias:-0,110915277670564;
outputValue:1,03446729715656;
errorGradient:0;
weights[
-0,358851125165285;
0,285213896671875;
-0,811575277620729;
0,666478183896503;
0,0331171951410907;
0,50685799471422;
0,507714427778364;
0,432874685820599;
0,550921487412845;
0,667341795595056;
-0,672433645311945;
-0,346722500094549;
0,521447130256075;
-0,0135083883132359;
-0,250505856820618;
-0,580861030882625;
0,186374653683218;
-0,511098254244355;
-0,349267654749224;
-0,0149779277923414;
-0,824895745061755;
0,883369235267569;
-0,921508285180437;
0,291652108212771;
0,894621192428573;
-0,668438482875209;
0,197824711537838;
0,305199314516596;
-0,0804974935392372;
-0,69589154035593;
0,510443136799356;
-0,540056315967839;
0,579577586417821;
-0,167527884788591;
0,14127228275932;
0,0491204695073517;
0,993451839309862;
0,777975539573457;
0,407651000380354;
-0,94501247720095;
0,517390944770254;
0,564811801335221;
-0,179598273327387;
-0,640221360903336;
-0,196465228310072;
0,0103249256547191;
0,0185598270122707;
-0,0813913620456082
]
inputs´8
3;
2;
2;
3;
2;
2;
2;
1;
1;
3;
1;
2;
1;
2;
2;
1;
3;
3;
2;
4;
2;
3;
4;
2;
2;
5;
3;
2;
2;
3;
3;
2;
1;
2;
2;
2;
1;
2;
3;
2;
2;
3;
2;
1;
1;
1;
1;
2
]
],
neuron[
AF:ReLU;
isInput:False;
inputValue:0;
bias:-0,551105642482222;
outputValue:5,85521668002718;
errorGradient:0;
weights[
-0,819758837027363;
0,516413984595059;
-0,936604243673666;
0,18274110796989;
0,616645453319254;
-0,286019532608809;
-0,242220360432854;
0,206722181852312;
-0,1032273858335;
0,771856991467931;
-0,298444321983701;
-0,690966716823618;
-0,797484886738232;
-0,486627820640163;
0,246813027768774;
-0,843101341204299;
0,867622670655894;
0,0736999134876299;
-0,311024984955334;
0,845219328927444;
0,700373673672031;
-0,574312870192487;
0,408399114109762;
0,0812507453752918;
-0,404255177548274;
0,467631127437405;
-0,389707546396976;
0,0629675085949559;
0,7187130757229;
-0,511882663477158;
-0,115703733226146;
0,313001690112521;
-0,720783926416554;
-0,143695043001182;
-0,260738656511874;
-0,212305524950989;
0,447047380473021;
0,277202576062271;
0,962932133098567;
-0,881508352179783;
-0,616507356807826;
0,84239828765504;
0,0966792251433615;
-0,993881451894474;
-0,293904677635946;
0,745954239622668;
0,314875831508485;
0,0514396219753845
]
inputs´8
3;
2;
2;
3;
2;
2;
2;
1;
1;
3;
1;
2;
1;
2;
2;
1;
3;
3;
2;
4;
2;
3;
4;
2;
2;
5;
3;
2;
2;
3;
3;
2;
1;
2;
2;
2;
1;
2;
3;
2;
2;
3;
2;
1;
1;
1;
1;
2
]
],
neuron[
AF:ReLU;
isInput:False;
inputValue:0;
bias:0,573588698903839;
outputValue:0;
errorGradient:0;
weights[
-0,797120019699037;
-0,0640878989659659;
0,936625012167089;
-0,670415188032396;
0,073389309026948;
-0,251479316154252;
0,754554033165124;
-0,891985129514702;
-0,0178549890489573;
-0,413003714481836;
-0,850985674118151;
-0,896311986211833;
0,69481213097219;
0,488009106129412;
-0,591344722356342;
-0,112439275305923;
0,388553987903778;
-0,970182790407065;
0,34621015626295;
0,774110835871711;
-0,540881447280236;
-0,29014872167732;
-0,409579905406376;
0,110767780389063;
-0,429516632775551;
0,46172668573527;
0,857975386016991;
0,329007904664151;
0,402280566004235;
-0,624844576988763;
-0,150209417170942;
-0,847244704071081;
0,558852831627639;
0,489378809691118;
0,515833095421937;
0,552205235488808;
-0,0523287453932356;
-0,0165831218550835;
0,205826764556499;
-0,89221572684693;
-0,0152926896769985;
-0,320320395436287;
-0,535097630478022;
-0,309793709455893;
0,813917807216718;
-0,98519636596795;
-0,311319487780016;
-0,645610818474372
]
inputs´8
3;
2;
2;
3;
2;
2;
2;
1;
1;
3;
1;
2;
1;
2;
2;
1;
3;
3;
2;
4;
2;
3;
4;
2;
2;
5;
3;
2;
2;
3;
3;
2;
1;
2;
2;
2;
1;
2;
3;
2;
2;
3;
2;
1;
1;
1;
1;
2
]
]
}
